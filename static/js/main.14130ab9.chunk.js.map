{"version":3,"sources":["components/Player.js","components/Cell.js","components/Board.js","App.js","index.js"],"names":["Player","props","cells","x","y","className","disabled","onClick","moveUpHandler","console","log","moveLeftHandler","length","moveRightHandler","moveDownHandler","Cell","cell","Header","useState","widthValue","setWidthValue","heightValue","setHeightValue","wrongKeys","xPosition","setXPosition","yPosition","setYPosition","keyDown","e","i","key","preventDefault","moveRight","moveLeft","moveDown","moveUp","type","onChange","event","valueItem","target","value","onKeyDown","min","max","generateBoard","map","el","uuid4","elem","cellArr","App","setCells","Board","outer","inner","j","push","left","right","down","up","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14130ab9.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Player(props){\r\n      const cells = props.cells;\r\n      const x = props.x;\r\n      const y = props.y;\r\n\r\n    //Todo arrow left\r\n    const arrowRightHandler = ()=>{\r\n        props.moveRightHandler();\r\n        console.log(\"Moved right\");\r\n    }\r\n\r\n    //Todo arrow right\r\n    const arrowLeftHandler = ()=>{\r\n        props.moveLeftHandler();\r\n        console.log(\"Moved left\");\r\n    }\r\n\r\n    //todo arrow up\r\n    const arrowUpHandler = ()=>{\r\n        props.moveUpHandler();\r\n        console.log(\"Moved up\");\r\n    }\r\n\r\n    //todo arrow down\r\n    const arrowDownHandler = ()=>{\r\n        props.moveDownHandler();\r\n        console.log(\"Moved down\");\r\n    }\r\n\r\n\r\n    return <div className=\"player\">\r\n        <div className=\"grid-item\"/>\r\n        <button  disabled={x === 0} className=\"grid-item\" onClick={arrowUpHandler}>‚áß</button>\r\n        <div className=\"grid-item\"/>\r\n        <button disabled={y === 0} className=\"grid-item\" onClick={arrowLeftHandler}>‚á¶</button>\r\n        {/* eslint-disable-next-line jsx-a11y/accessible-emoji */}\r\n        <div className=\"grid-item\">üê±</div>\r\n        <button disabled={y === cells[x].length-1} className=\"grid-item\" onClick={arrowRightHandler}>‚á®</button>\r\n        <div className=\"grid-item\"/>\r\n        <button disabled={x === cells.length-1} className=\"grid-item\" onClick={arrowDownHandler}>‚á©</button>\r\n        <div className=\"grid-item\"/>\r\n    </div>\r\n}\r\n\r\nexport default Player;","import React from \"react\";\r\n\r\nfunction Cell(props){\r\n    return <div className=\"cell\" >\r\n        {props.cell}\r\n    </div>\r\n}\r\n\r\nexport default Cell;","import React, {useState} from 'react';\r\nimport Player from \"./Player\";\r\nimport Cell from \"./Cell\";\r\nimport { v4 as uuid4 } from 'uuid';\r\n\r\nfunction Header(props){\r\n    const [widthValue, setWidthValue] = useState(1);\r\n    const [heightValue, setHeightValue] = useState(1);\r\n    const wrongKeys = ['e', '+', '-', '.'];\r\n\r\n    const cells = props.cells;\r\n    const [xPosition, setXPosition] = useState(0);\r\n    const [yPosition, setYPosition] = useState(0);\r\n\r\n    const handleWidth = (event) =>{\r\n        const valueItem = event.target.value;\r\n        setWidthValue(valueItem);\r\n    }\r\n\r\n    const handleHeight = (event) =>{\r\n        const valueItem = event.target.value;\r\n        setHeightValue(valueItem);\r\n    }\r\n    const buttonHandler = () =>{\r\n        setXPosition(0);\r\n        setYPosition(0);\r\n        props.generateBoard(widthValue, heightValue);\r\n        setWidthValue(1);\r\n        setHeightValue(1)\r\n    }\r\n\r\n    //Todo prevent from entering non digit characters\r\n    function keyDown(e){\r\n        for(let i = 0; i < wrongKeys.length; i++){\r\n            if(e.key === wrongKeys[i]){\r\n                e.preventDefault();\r\n                console.log(\"wrong key \" + e.key);\r\n            }\r\n        }\r\n    }\r\n\r\n    //<<<<<<<< div panel >>>>>>>>>>>>>>>>>>>>>>\r\n\r\n\r\n    const moveRightHandler = () =>{\r\n        props.moveRight(xPosition, yPosition);\r\n        const tempYPosition = yPosition + 1;\r\n        setYPosition(tempYPosition);\r\n    }\r\n\r\n    const moveLeftHandler = () =>{\r\n\r\n        props.moveLeft(xPosition, yPosition);\r\n        const tempYPosition = yPosition - 1;\r\n        setYPosition(tempYPosition);\r\n    }\r\n\r\n    const moveDownHandler = () =>{\r\n        props.moveDown(xPosition,yPosition);\r\n        const tempXPosition = xPosition + 1;\r\n        setXPosition(tempXPosition);\r\n    }\r\n\r\n    const moveUpHandler = () =>{\r\n        props.moveUp(xPosition,yPosition);\r\n        const tempXPosition = xPosition - 1;\r\n        setXPosition(tempXPosition);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div className=\"header-class\">\r\n                <input type=\"number\"  onChange={handleWidth}\r\n                       onKeyDown={keyDown}\r\n                       value={widthValue}\r\n                       min=\"1\" max=\"10\"/>\r\n\r\n                <label><strong>X</strong></label>\r\n\r\n                <input type=\"number\" onChange={handleHeight}\r\n                       onKeyDown={keyDown}\r\n                       value={heightValue}\r\n                       min=\"1\" max=\"10\"/>\r\n\r\n                <button className=\"main-button btn btn-primary\"\r\n                        onClick={buttonHandler}>board size</button>\r\n            </div>\r\n            <hr/>\r\n\r\n            <div className=\"panel\" >\r\n                {cells.map(el=>\r\n                    <div className=\"cellrow-class\" key={uuid4()}>\r\n                        {el.map(elem => {\r\n                            if(elem === 0){return <Player\r\n                                moveLeftHandler={moveLeftHandler}\r\n                                moveRightHandler={moveRightHandler}\r\n                                moveDownHandler={moveDownHandler}\r\n                                moveUpHandler={moveUpHandler}\r\n                                cells={cells}\r\n                                x={xPosition}\r\n                                y={yPosition}\r\n                                key={uuid4()}\r\n                            />}\r\n                            return < Cell cell={elem} key={uuid4()} />})}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n        </div>)\r\n}\r\n\r\nexport default Header;","import React, { useState } from 'react';\nimport './App.css';\nimport Board from \"./components/Board\";\n\n\nconst cellArr = [[0]];\n\nfunction App() {\n\n    const [cells, setCells] = useState(cellArr)\n\n\n    //Todo create board\n    const generateBoard = (widthValue, heightValue) =>{\n        const outer = [];\n\n        for(let i = 0; i < heightValue; i++){\n            const inner = [];\n            for(let j = 0; j < widthValue; j++){\n                inner.push(\"\");\n            }\n            outer.push(inner);\n        }\n        outer[0][0] = 0;\n        setCells(outer);\n    }\n\n    //Todo move left\n    const moveRight = (x, y)=>{\n        const a = [...cells];\n        const right = a.map(elem => elem.map(()=> \"\"));\n        right[x][y+1] = 0;\n        setCells(right);\n    }\n\n    //Todo move right\n    const moveLeft = (x, y)=>{\n        const a = [...cells];\n        const left = a.map(elem => elem.map(()=> \"\"));\n        left[x][y-1] = 0;\n        setCells(left);\n    }\n\n    //Todo move down\n    const moveDown = (x, y)=>{\n        const a = [...cells];\n        const down = a.map(elem => elem.map(()=> \"\"));\n        down[x+1][y] = 0;\n        setCells(down);\n    }\n\n    //Todo move up\n    const moveUp = (x, y)=>{\n        const a = [...cells];\n        const up = a.map(elem => elem.map(()=> \"\"));\n        up[x-1][y] = 0;\n        setCells(up);\n    }\n\n    return (\n        <div className=\"App\">\n            <Board generateBoard={generateBoard}\n                    cells={cells}\n                    moveLeft={moveLeft}\n                    moveRight={moveRight}\n                    moveDown={moveDown}\n                    moveUp={moveUp}\n            />\n\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}